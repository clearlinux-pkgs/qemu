commit 554a1e987661d0b54dc2b782c877b5bc5111c0f2
Author: Anthony Xu <anthony.xu@intel.com>
Date:   Mon Mar 14 15:55:24 2016 -0700

    13 pam registers create 52 memory region in Qemu, which makes memory
    region related operation slow, this patche reduce pam memory regions
    from 52 to 2.
    
    Signed-off-by: Anthony Xu <anthony.xu@intel.com>

diff --git a/hw/pci-host/pam.c b/hw/pci-host/pam.c
index e361ecb..66afb52 100644
--- a/hw/pci-host/pam.c
+++ b/hw/pci-host/pam.c
@@ -36,6 +36,7 @@ void init_pam(DeviceState *dev, MemoryRegion *ram_memory,
               MemoryRegion *system_memory, MemoryRegion *pci_address_space,
               PAMMemoryRegion *mem, uint32_t start, uint32_t size)
 {
+#if 0
     int i;
 
     /* RAM */
@@ -57,14 +58,22 @@ void init_pam(DeviceState *dev, MemoryRegion *ram_memory,
         memory_region_add_subregion_overlap(system_memory, start,
                                             &mem->alias[i], 1);
     }
+#endif
+    memory_region_init_alias(&mem->alias[0], OBJECT(dev), "pam-pci", pci_address_space,
+                             start, size);
+    memory_region_set_enabled(&mem->alias[0], false);
+    memory_region_add_subregion_overlap(system_memory, start,
+                                            &mem->alias[0], 1);
     mem->current = 0;
 }
 
 void pam_update(PAMMemoryRegion *pam, int idx, uint8_t val)
 {
     assert(0 <= idx && idx <= 12);
-
-    memory_region_set_enabled(&pam->alias[pam->current], false);
     pam->current = (val >> ((!(idx & 1)) * 4)) & PAM_ATTR_MASK;
-    memory_region_set_enabled(&pam->alias[pam->current], true);
+    if( pam->current == 0 ) {
+        memory_region_set_enabled(&pam->alias[0], true);
+    } else {
+        memory_region_set_enabled(&pam->alias[0], false);
+    }
 }
diff --git a/hw/pci-host/q35.c b/hw/pci-host/q35.c
index f214b11..209d563 100644
--- a/hw/pci-host/q35.c
+++ b/hw/pci-host/q35.c
@@ -277,7 +277,7 @@ static void mch_update_pam(MCHPCIState *mch)
     int i;
 
     memory_region_transaction_begin();
-    for (i = 0; i < 13; i++) {
+    for (i = 0; i < 2; i++) {
         pam_update(&mch->pam_regions[i], i,
                    pd->config[MCH_HOST_BRIDGE_PAM0 + ((i + 1) / 2)]);
     }
@@ -451,7 +451,7 @@ static void mch_init_dmar(MCHPCIState *mch)
 
 static void mch_realize(PCIDevice *d, Error **errp)
 {
-    int i;
+//    int i;
     MCHPCIState *mch = MCH_PCI_DEVICE(d);
 
     /* setup pci memory mapping */
@@ -502,11 +502,10 @@ static void mch_realize(PCIDevice *d, Error **errp)
     init_pam(DEVICE(mch), mch->ram_memory, mch->system_memory,
              mch->pci_address_space, &mch->pam_regions[0],
              PAM_BIOS_BASE, PAM_BIOS_SIZE);
-    for (i = 0; i < 12; ++i) {
-        init_pam(DEVICE(mch), mch->ram_memory, mch->system_memory,
-                 mch->pci_address_space, &mch->pam_regions[i+1],
-                 PAM_EXPAN_BASE + i * PAM_EXPAN_SIZE, PAM_EXPAN_SIZE);
-    }
+    init_pam(DEVICE(mch), mch->ram_memory, mch->system_memory,
+             mch->pci_address_space, &mch->pam_regions[1],
+             PAM_EXPAN_BASE, 12 * PAM_EXPAN_SIZE);
+
     /* Intel IOMMU (VT-d) */
     if (object_property_get_bool(qdev_get_machine(), "iommu", NULL)) {
         mch_init_dmar(mch);
